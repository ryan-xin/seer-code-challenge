[{"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/index.js":"1","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/reportWebVitals.js":"2","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/App.js":"3","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Footer.js":"4","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Blog.js":"5","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Post.js":"6","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Banner.js":"7","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/PostBlock.js":"8","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Pagination.js":"9","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/PostList.js":"10","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Loading.js":"11","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Navigation.js":"12","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Menu.js":"13","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/RelatedPosts.js":"14","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/RelatedPostBlock.js":"15"},{"size":522,"mtime":1608508098403,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1608417223174,"results":"18","hashOfConfig":"17"},{"size":523,"mtime":1608533450279,"results":"19","hashOfConfig":"17"},{"size":1425,"mtime":1608522873646,"results":"20","hashOfConfig":"17"},{"size":4272,"mtime":1608532039614,"results":"21","hashOfConfig":"17"},{"size":2544,"mtime":1608533776393,"results":"22","hashOfConfig":"17"},{"size":595,"mtime":1608518424681,"results":"23","hashOfConfig":"17"},{"size":1321,"mtime":1608523162383,"results":"24","hashOfConfig":"17"},{"size":2745,"mtime":1608523013191,"results":"25","hashOfConfig":"17"},{"size":347,"mtime":1608508145015,"results":"26","hashOfConfig":"17"},{"size":198,"mtime":1608513961825,"results":"27","hashOfConfig":"17"},{"size":1688,"mtime":1608534956913,"results":"28","hashOfConfig":"17"},{"size":1044,"mtime":1608522291070,"results":"29","hashOfConfig":"17"},{"size":807,"mtime":1608534771403,"results":"30","hashOfConfig":"17"},{"size":1455,"mtime":1608535485022,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1athgj8",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/index.js",[],["65","66"],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/reportWebVitals.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/App.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Footer.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Blog.js",["67","68"],"import React, { useState, useEffect } from 'react';\nimport Banner from './Banner';\nimport PostList from './PostList';\nimport Pagination from './Pagination';\nimport Loading from './Loading';\nimport axios from 'axios';\nimport './Blog.css';\n\nconst Blog = (props) => {\n  const BLOG_URL = 'https://backend.seerplatform.com/content-types/blog';\n  const blogBanner = {\n    title: 'Seer Blog',\n    description: 'News, articles and insightful stories dedicated to prepare you for your future decisions.'\n  };\n  \n  const [allPosts, setAllPosts] = useState([]);\n  const [displayedPosts, setDisplayedPosts] = useState([]);\n  const [pages, setPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Get num(1 or -1; 1 stands for next page & -1 stands for prev page) from Pagination to setCurrentPage\n  const changePageHandler = (num) => {\n    setCurrentPage(currentPage + num);\n    // Save currentPage to localStorage for non-children component use\n    localStorage.setItem('currentPage', currentPage + num);\n    // Scroll to Blog List top position\n    window.scrollTo(0, 500);\n  };\n  \n  // Get num(page number) from Pagination to setCurrentPage\n  const setPageHandler = (num) => {\n    setCurrentPage(num);\n    // Save currentPage to localStorage for non-children component use\n    localStorage.setItem('currentPage', num);\n    // Scroll to Blog List top position\n    window.scrollTo(0, 500);\n  };\n  \n  // Get all posts from backend when DOM is ready (componentDidMount)\n  useEffect(() => {\n    axios.get(BLOG_URL)\n    .then(res => {\n      const resPosts = res.data.data.content_type.contents;\n      // Save all posts to allPosts\n      setAllPosts(resPosts);\n      \n      // Save pages number to pages\n      const pages = Math.round(resPosts.length / 10);\n      setPages(pages);\n      \n      // If existedPage has value setCurrentPage to parseInt(existedPage)\n      const existedPage = props.match.params.pageNum;\n      if(existedPage) {\n        // props.match.params.pageNum returns a string, it needs to be converted to num.\n        const convertedExistedPage = parseInt(existedPage);\n        setCurrentPage(convertedExistedPage);\n        setDisplayedPosts(resPosts.slice((convertedExistedPage - 1) * 10, (convertedExistedPage * 10)))\n        // Save currentPage to localStorage for non-children component use\n        localStorage.setItem('currentPage', convertedExistedPage);\n      } else {\n        // If existedPage doesn't exists, setCurrentPage to 1\n        setCurrentPage(1);\n        // Save currentPage to localStorage for non-children component use\n        localStorage.setItem('currentPage', 1);\n        // Save first 10 posts to displayedPosts and pass to PostList\n        setDisplayedPosts(resPosts.slice(0, 10));\n      }\n      setIsLoading(false);\n    })\n    .catch(err => console.log(err));\n  }, []);\n  \n  // For handling go back to previous scroll position\n  useEffect(() => {\n    // Get saved scrollPosition from localStorage\n    const scrollPosition = localStorage.getItem('scrollPosition');\n    if(scrollPosition) {\n      setTimeout(() => {\n        window.scrollTo({\n          top: parseInt(scrollPosition),\n          left: 0,\n          behavior: 'smooth'\n        });\n        localStorage.removeItem('scrollPosition');\n      }, 300);\n    }\n  });\n  \n  // When currentPage changed this method is trigged to set current displayedPosts and pass to PostList\n  useEffect(() => {\n    setDisplayedPosts(allPosts.slice((currentPage - 1) * 10, (currentPage * 10)))\n  }, [currentPage]);\n  \n  return(\n    <>\n      {/* Blog top banner */}\n      <Banner \n        title={blogBanner.title}\n        description={blogBanner.description}\n      />\n      \n      {\n        isLoading ? \n        <Loading /> :\n        <div className=\"blog-container\">\n        \n          {/* Blog posts list */}\n          <div className=\"blog-list-container\">\n            <PostList \n              posts={displayedPosts}\n            />\n          </div>\n          \n          {/* Pagination */}\n          <Pagination \n            pages={pages}\n            currentPage={currentPage}\n            changePage={changePageHandler}\n            setPage={setPageHandler}\n          />\n        </div>\n      }\n    </>\n  )\n}\n\nexport default Blog;","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Post.js",["69"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport RelatedPosts from './RelatedPosts';\nimport Loading from './Loading';\nimport axios from 'axios';\nimport './Post.css';\n\nconst Post = (props) => {\n  const POST_URL = `https://backend.seerplatform.com/content-types/blog/${props.match.params.postId}`;\n  const BLOG_URL = 'https://backend.seerplatform.com/content-types/blog';\n  \n  const currentPage = localStorage.getItem('currentPage');\n  \n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [body, setBody] = useState(null);\n  const [relatedPosts, setRelatedPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Get selected post from backend when DOM is ready (componentDidMount)\n  useEffect(() => {\n    axios.get(POST_URL)\n    .then(res => {\n      const post = res.data.data.content;\n      setTitle(post.title);\n      setDate(post.created_at.slice(0, 10));\n      setBody(post.body);\n      setIsLoading(false);\n    })\n    .catch(err => console.log(err));\n  }, []);\n  \n  useEffect(() => {\n    axios.get(BLOG_URL)\n    .then(res => {\n      const resPosts = res.data.data.content_type.contents;\n      setRelatedPosts(resPosts.slice(0, 3));\n    })\n    .catch(err => console.log(err));\n  }, []);\n  \n  return(\n    <>\n      {\n        isLoading ? \n        <Loading /> :\n        <>\n          {/* Blog post header */}\n          <div\n            className=\"post-header\"\n            style={{\n              background: 'url(\"/banner_circle_03.svg\") right bottom no-repeat',\n              backgroundColor: '#6C3563'\n            }}\n          >\n            {/* Back to Blog button */}\n            <div className=\"bread-crumbs\">\n              <Link\n                className=\"link-small text-color-white\"\n                to={`/blog/${currentPage}`}\n              >\n                &lt; Back to Blog\n              </Link>\n            </div>\n            \n            <div className=\"post-header-content-wrapper\">\n              <div className=\"post-header-content\">\n                <h2 className=\"text-color-white\">{title}</h2>\n                <p>{date}</p>\n              </div>\n            </div>\n          </div>\n          \n          {/* Blog post body content */}\n          <div\n            className=\"post-body\"\n            dangerouslySetInnerHTML={{__html: body}}\n          />\n          \n          {/* Related posts */}\n          <RelatedPosts\n            posts={relatedPosts}\n          />\n        </>\n      }\n    </>\n  )\n}\n\nexport default Post;","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Banner.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/PostBlock.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Pagination.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/PostList.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Loading.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Navigation.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Menu.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/RelatedPosts.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/RelatedPostBlock.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":72,"column":6,"nodeType":"76","endLine":72,"endColumn":8,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":93,"column":6,"nodeType":"76","endLine":93,"endColumn":19,"suggestions":"79"},{"ruleId":"74","severity":1,"message":"80","line":31,"column":6,"nodeType":"76","endLine":31,"endColumn":8,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.pageNum'. Either include it or remove the dependency array.","ArrayExpression",["84"],"React Hook useEffect has a missing dependency: 'allPosts'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayedPosts' needs the current value of 'allPosts'.",["85"],"React Hook useEffect has a missing dependency: 'POST_URL'. Either include it or remove the dependency array.",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [props.match.params.pageNum]",{"range":"93","text":"94"},"Update the dependencies array to be: [allPosts, currentPage]",{"range":"95","text":"96"},"Update the dependencies array to be: [POST_URL]",{"range":"97","text":"98"},[2876,2878],"[props.match.params.pageNum]",[3544,3557],"[allPosts, currentPage]",[1075,1077],"[POST_URL]"]
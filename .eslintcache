[{"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/index.js":"1","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/reportWebVitals.js":"2","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/App.js":"3","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Footer.js":"4","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Blog.js":"5","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Post.js":"6","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Banner.js":"7","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/PostBlock.js":"8","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Pagination.js":"9","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/PostList.js":"10","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Loading.js":"11","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Navigation.js":"12"},{"size":522,"mtime":1608506983817,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1608417223174,"results":"15","hashOfConfig":"14"},{"size":549,"mtime":1608507553822,"results":"16","hashOfConfig":"14"},{"size":1303,"mtime":1608502931861,"results":"17","hashOfConfig":"14"},{"size":3688,"mtime":1608507029081,"results":"18","hashOfConfig":"14"},{"size":1813,"mtime":1608467470150,"results":"19","hashOfConfig":"14"},{"size":620,"mtime":1608507021481,"results":"20","hashOfConfig":"14"},{"size":994,"mtime":1608507024654,"results":"21","hashOfConfig":"14"},{"size":2763,"mtime":1608463269263,"results":"22","hashOfConfig":"14"},{"size":372,"mtime":1608462816922,"results":"23","hashOfConfig":"14"},{"size":223,"mtime":1608450034456,"results":"24","hashOfConfig":"14"},{"size":905,"mtime":1608507018129,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1athgj8",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/index.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/reportWebVitals.js",[],["55","56"],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/App.js",["57"],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Footer.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Blog.js",["58","59"],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Post.js",["60"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from './Loading';\nimport axios from 'axios';\nimport './Post.css';\n\nconst Post = (props) => {\n  const POST_URL = `http://backend.seerplatform.com/content-types/blog/${props.match.params.postId}`;\n  \n  const currentPage = localStorage.getItem('currentPage');\n  \n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [body, setBody] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Get selected post from backend when DOM is ready (componentDidMount)\n  useEffect(() => {\n    axios.get(POST_URL)\n    .then(res => {\n      const post = res.data.data.content;\n      setTitle(post.title);\n      setDate(post.created_at.slice(0, 10));\n      setBody(post.body);\n      setIsLoading(false);\n    })\n    .catch(err => console.log(err));\n  }, []);\n  \n  return(\n    <>\n      {\n        isLoading ? \n        <Loading /> :\n        <>\n          <div\n            className=\"post-header\"\n            style={{\n              background: 'url(\"/banner_circle_03.svg\") right bottom no-repeat',\n              backgroundColor: '#6C3563'\n            }}\n          >\n            <div className=\"bread-crumbs\">\n              <Link className=\"link-small text-color-white\" to={`/blog/${currentPage}`}>&lt; Back to Blog</Link>\n            </div>\n            <div className=\"post-header-content-wrapper\">\n              <div className=\"post-header-content\">\n                <h1 className=\"text-color-white\">{title}</h1>\n                <p>{date}</p>\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"post-body\"\n            dangerouslySetInnerHTML={{__html: body}}\n          />\n        </>\n      }\n    </>\n  )\n}\n\nexport default Post;","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Banner.js",["61","62"],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/PostBlock.js",["63","64"],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Pagination.js",["65","66","67","68"],"import { render } from '@testing-library/react';\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './Pagination.css';\n\nconst Pagination = (props) => {\n  // Use props.pages to render pages number buttons\n  const pageButtons = [];\n  for (let i = 1; i <= props.pages; i++) {\n    // Set selected class(current-page) to props.currentPage number button\n    if(i === props.currentPage) {\n      pageButtons.push(\n        <div\n          className=\"current-page\"\n          key={i} \n          onClick={() => setPageHandler(i)}\n        >\n          <span \n            className=\"page-number text-color-white\" \n          >{i}</span>\n        </div>\n      )\n    } else {\n      pageButtons.push(\n        <div\n          className=\"unselected-page\"\n          key={i}\n          onClick={() => setPageHandler(i)}\n        >\n          <span\n            className=\"page-number text-color-primary\"\n          >{i}</span>\n        </div>\n      )\n    }\n  }\n  \n  const history = useHistory();\n  \n  // Lifting State num to parent to setCurrentPage: '-1' stands for clicking PrevPage Button; '1' stands for clicking PrevPage Button\n  const changePageHandler = (num) => {\n    // Only trigger PrevPage Button when props.currentPage is bigger than 1\n    if(num === -1 && props.currentPage > 1) {\n      props.changePage(num);\n      history.push(`/blog/${props.currentPage + num}`);\n    }\n    // Only trigger NextPage Button when props.currentPage is smaller than total pages(props.pages)\n    if(num === 1 && props.currentPage < props.pages) {\n      props.changePage(num);\n      history.push(`/blog/${props.currentPage + num}`);\n    }\n  };\n  \n  // Lifting State num to parent to setCurrentPage: num is the selected page number\n  const setPageHandler = (num) => {\n    props.setPage(num);\n    history.push(`/blog/${num}`)\n  };\n  \n  return(\n    <>\n      <div className=\"pagination-container\">\n        {/* Hide PrevPage Button when props.currentPage is the first page */}\n        {\n          props.currentPage === 1 ? \n          null : \n          <div\n            className=\"unselected-page\"\n            onClick={() => changePageHandler(-1)}\n          >\n            <img src=\"/prev_page_icon.svg\" alt=\"Prev Page\" />\n          </div>\n        }\n        <div className=\"page-number-container\">\n          {pageButtons}\n        </div>\n        {/* Hide NextPage Button when props.currentPage is the last page */}\n        {\n          props.currentPage === props.pages ? \n          null : \n          <div\n            className=\"unselected-page\"\n            onClick={() => changePageHandler(1)}\n          >\n            <img src=\"/next_page_icon.svg\" alt=\"Next Page\" />\n          </div>\n        }\n      </div>\n    </>\n  )\n}\n\nexport default Pagination;","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/PostList.js",["69","70"],"import React, { useState, useEffect } from 'react';\nimport PostBlock from './PostBlock';\n\nconst PostList = (props) => {\n  return(\n    props.posts.map((post) => {\n      return <PostBlock \n        key={post.id}\n        id={post.id}\n        banner={post.banner}\n        title={post.title}\n        description={post.description}\n      />\n    })\n  )\n}\n\nexport default PostList;","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Loading.js",["71","72"],"import React, { useState, useEffect } from 'react';\nimport './Loading.css';\n\nconst Loading = (props) => {\n  return(\n    <div className=\"loading-container\">\n      <h4>Loading...</h4>\n    </div>\n  )\n}\n\nexport default Loading;","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Navigation.js",["73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":16,"nodeType":"81","messageId":"82","endLine":2,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":66,"column":6,"nodeType":"85","endLine":66,"endColumn":8,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":82,"column":6,"nodeType":"85","endLine":82,"endColumn":19,"suggestions":"88"},{"ruleId":"83","severity":1,"message":"89","line":28,"column":6,"nodeType":"85","endLine":28,"endColumn":8,"suggestions":"90"},{"ruleId":"79","severity":1,"message":"91","line":2,"column":17,"nodeType":"81","messageId":"82","endLine":2,"endColumn":25},{"ruleId":"79","severity":1,"message":"92","line":2,"column":27,"nodeType":"81","messageId":"82","endLine":2,"endColumn":36},{"ruleId":"79","severity":1,"message":"91","line":2,"column":17,"nodeType":"81","messageId":"82","endLine":2,"endColumn":25},{"ruleId":"79","severity":1,"message":"92","line":2,"column":27,"nodeType":"81","messageId":"82","endLine":2,"endColumn":36},{"ruleId":"79","severity":1,"message":"93","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":16},{"ruleId":"79","severity":1,"message":"91","line":2,"column":17,"nodeType":"81","messageId":"82","endLine":2,"endColumn":25},{"ruleId":"79","severity":1,"message":"92","line":2,"column":27,"nodeType":"81","messageId":"82","endLine":2,"endColumn":36},{"ruleId":"79","severity":1,"message":"80","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":14},{"ruleId":"79","severity":1,"message":"91","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"92","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"91","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"92","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"91","line":2,"column":17,"nodeType":"81","messageId":"82","endLine":2,"endColumn":25},{"ruleId":"79","severity":1,"message":"92","line":2,"column":27,"nodeType":"81","messageId":"82","endLine":2,"endColumn":36},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.pageNum'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'allPosts'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayedPosts' needs the current value of 'allPosts'.",["97"],"React Hook useEffect has a missing dependency: 'POST_URL'. Either include it or remove the dependency array.",["98"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [props.match.params.pageNum]",{"range":"105","text":"106"},"Update the dependencies array to be: [allPosts, currentPage]",{"range":"107","text":"108"},"Update the dependencies array to be: [POST_URL]",{"range":"109","text":"110"},[2519,2521],"[props.match.params.pageNum]",[3080,3093],"[allPosts, currentPage]",[901,903],"[POST_URL]"]
[{"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/index.js":"1","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/reportWebVitals.js":"2","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/App.js":"3","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Footer.js":"4","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Blog.js":"5","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Post.js":"6","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Banner.js":"7","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/PostBlock.js":"8","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Pagination.js":"9","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/PostList.js":"10","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Loading.js":"11","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Navigation.js":"12"},{"size":522,"mtime":1608440829193,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1608417223174,"results":"15","hashOfConfig":"14"},{"size":545,"mtime":1608457055056,"results":"16","hashOfConfig":"14"},{"size":1228,"mtime":1608460799534,"results":"17","hashOfConfig":"14"},{"size":2598,"mtime":1608457766127,"results":"18","hashOfConfig":"14"},{"size":1780,"mtime":1608458315291,"results":"19","hashOfConfig":"14"},{"size":620,"mtime":1608453638230,"results":"20","hashOfConfig":"14"},{"size":740,"mtime":1608458298010,"results":"21","hashOfConfig":"14"},{"size":2530,"mtime":1608449562356,"results":"22","hashOfConfig":"14"},{"size":400,"mtime":1608451309965,"results":"23","hashOfConfig":"14"},{"size":223,"mtime":1608450034456,"results":"24","hashOfConfig":"14"},{"size":1005,"mtime":1608453883424,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1athgj8",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"28"},"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/index.js",[],["60","61"],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/reportWebVitals.js",[],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/App.js",["62"],"import './App.css';\nimport {Route, Link, HashRouter as Router} from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport Footer from './components/Footer';\nimport Blog from './components/Blog';\nimport Post from './components/Post';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navigation />\n        <Route exact path={[\"/blog\", \"/blog/pages/:pageNum\"]} component={Blog} />\n        <Route exact path=\"/blog/:postId\" component={Post} />\n        <Footer />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Footer.js",["63","64"],"/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Blog.js",["65"],"import React, { useState, useEffect } from 'react';\nimport Banner from './Banner';\nimport PostList from './PostList';\nimport Pagination from './Pagination';\nimport Loading from './Loading';\nimport axios from 'axios';\nimport './Blog.css';\n\nconst Blog = (props) => {\n  const BLOG_URL = 'http://backend.seerplatform.com/content-types/blog';\n  const blogBanner = {\n    title: 'Seer Blog',\n    description: 'News, articles and insightful stories dedicated to prepare you for your future decisions.'\n  };\n  \n  const [allPosts, setAllPosts] = useState([]);\n  const [displayedPosts, setDisplayedPosts] = useState([]);\n  const [pages, setPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Get num(1 or -1) from Pagination to setCurrentPage\n  const changePageHandler = (num) => {\n    setCurrentPage(currentPage + num);\n    // Scroll to Blog List top position\n    window.scrollTo(0, 500);\n  };\n  \n  // Get num(page number) from Pagination to setCurrentPage\n  const setPageHandler = (num) => {\n    setCurrentPage(num);\n    localStorage.setItem('currentPage', num);\n    // Scroll to Blog List top position\n    window.scrollTo(0, 500);\n  };\n  \n  // Get all posts from backend when DOM is ready (componentDidMount)\n  useEffect(() => {\n    axios.get(BLOG_URL)\n    .then(res => {\n      const resPosts = res.data.data.content_type.contents;\n      // Save all posts to allPosts\n      setAllPosts(resPosts);\n      // Save pages number to pages\n      const pages = Math.round(resPosts.length / 10);\n      setPages(pages);\n      // Save first 10 posts to displayedPosts and pass to PostList\n      setDisplayedPosts(resPosts.slice(0, 10));\n      setIsLoading(false);\n    })\n    .catch(err => console.log(err));\n  }, []);\n  \n  // When currentPage changed call this method to set current displayedPosts and pass to PostList\n  useEffect(() => {\n    setDisplayedPosts(allPosts.slice((currentPage - 1) * 10, (currentPage * 10)))\n  }, [currentPage]);\n  \n  return(\n    <>\n      <Banner \n        title={blogBanner.title}\n        description={blogBanner.description}\n      />\n      {\n        isLoading ? \n        <Loading /> :\n        <div className=\"blog-container\">\n          <div className=\"blog-list-container\">\n            <PostList \n              posts={displayedPosts}\n            />\n          </div>\n          <Pagination \n            pages={pages}\n            currentPage={currentPage}\n            changePage={changePageHandler}\n            setPage={setPageHandler}\n          />\n        </div>\n      }\n    </>\n  )\n}\n\nexport default Blog;","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Post.js",["66","67"],"import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Loading from './Loading';\nimport axios from 'axios';\nimport './Post.css';\n\nconst Post = (props) => {\n  const POST_URL = `http://backend.seerplatform.com/content-types/blog/${props.match.params.postId}`;\n  const history = useHistory();\n  \n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [body, setBody] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Get selected post from backend when DOM is ready (componentDidMount)\n  useEffect(() => {\n    axios.get(POST_URL)\n    .then(res => {\n      const post = res.data.data.content;\n      setTitle(post.title);\n      setDate(post.created_at.slice(0, 10));\n      setBody(post.body);\n      setIsLoading(false);\n    })\n    .catch(err => console.log(err));\n  }, []);\n  \n  return(\n    <>\n      {\n        isLoading ? \n        <Loading /> :\n        <>\n          <div\n            className=\"post-header\"\n            style={{\n              background: 'url(\"/banner_circle_03.svg\") right bottom no-repeat',\n              backgroundColor: '#6C3563'\n            }}\n          >\n            <div className=\"bread-crumbs\">\n              <Link className=\"link-small text-color-white\" to={'/blog'}>&lt; Back to Blog</Link>\n            </div>\n            <div className=\"post-header-content-wrapper\">\n              <div className=\"post-header-content\">\n                <h1 className=\"text-color-white\">{title}</h1>\n                <p>{date}</p>\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"post-body\"\n            dangerouslySetInnerHTML={{__html: body}}\n          />\n        </>\n      }\n    </>\n  )\n}\n\nexport default Post;","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Banner.js",["68","69"],"import React, { useState, useEffect } from 'react';\nimport './Banner.css';\n\nconst Banner = (props) => {\n  return(\n    <div\n      className=\"banner\"\n      style={{\n        background: 'url(\"/banner_circle_01.svg\") left top no-repeat, url(\"/banner_circle_02.svg\") right bottom no-repeat',\n        backgroundColor: '#6C3563'\n      }}\n    >\n      <div className=\"banner-content-wrapper\">\n        <div className=\"banner-content\">\n          <h1>{props.title}</h1>\n          <p>{props.description}</p>\n          <img src='/arrow_down.svg' alt=\"down arrow\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Banner;","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/PostBlock.js",["70","71"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './PostBlock.css';\n\nconst PostBlock = (props) => {\n  return(\n    <div className=\"post-block-item\">\n      <Link target=\"_blank\" to={`/blog/${props.id}`}>\n        <img className=\"post-thumbnail\" src={props.banner} alt={props.title} />\n      </Link>\n      <Link className=\"no-underline-link\" target=\"_blank\" to={`/blog/${props.id}`}>\n        <h2 className=\"text-color-darkgrey post-title-link\">{props.title}</h2>\n      </Link>\n      <p className=\"text-color-darkgrey\">{props.description}</p>\n      <Link className=\"link text-color-secondary\" target=\"_blank\" to={`/blog/${props.id}`}>Read More</Link>\n    </div>\n  )\n}\n\nexport default PostBlock;","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Pagination.js",["72","73","74"],"import { render } from '@testing-library/react';\nimport React, { useState, useEffect } from 'react';\nimport './Pagination.css';\n\nconst Pagination = (props) => {\n  // Use props.pages to render pages number buttons\n  const pageButtons = [];\n  for (let i = 1; i <= props.pages; i++) {\n    // Set selected class(current-page) to props.currentPage number button\n    if(i === props.currentPage) {\n      pageButtons.push(\n        <div\n          className=\"current-page\"\n          key={i} \n          onClick={() => setPageHandler(i)}\n        >\n          <span \n            className=\"page-number text-color-white\" \n          >{i}</span>\n        </div>\n      )\n    } else {\n      pageButtons.push(\n        <div\n          className=\"unselected-page\"\n          key={i}\n          onClick={() => setPageHandler(i)}\n        >\n          <span\n            className=\"page-number text-color-primary\"\n          >{i}</span>\n        </div>\n      )\n    }\n  }\n  \n  // Lifting State num to parent to setCurrentPage: '-1' stands for clicking PrevPage Button; '1' stands for clicking PrevPage Button\n  const changePageHandler = (num) => {\n    // Only trigger PrevPage Button when props.currentPage is bigger than 1\n    if(num === -1 && props.currentPage > 1) {\n      props.changePage(num);\n    }\n    // Only trigger NextPage Button when props.currentPage is smaller than total pages(props.pages)\n    if(num === 1 && props.currentPage < props.pages) {\n      props.changePage(num);\n    }\n  };\n  \n  // Lifting State num to parent to setCurrentPage: num is the selected page number\n  const setPageHandler = (num) => {\n    props.setPage(num);\n  };\n  \n  return(\n    <>\n      <div className=\"pagination-container\">\n        {/* Hide PrevPage Button when props.currentPage is the first page */}\n        {\n          props.currentPage === 1 ? \n          null : \n          <div\n            className=\"unselected-page\"\n            onClick={() => changePageHandler(-1)}\n          >\n            <img src=\"/prev_page_icon.svg\" alt=\"Prev Page\" />\n          </div>\n        }\n        <div className=\"page-number-container\">\n          {pageButtons}\n        </div>\n        {/* Hide NextPage Button when props.currentPage is the last page */}\n        {\n          props.currentPage === props.pages ? \n          null : \n          <div\n            className=\"unselected-page\"\n            onClick={() => changePageHandler(1)}\n          >\n            <img src=\"/next_page_icon.svg\" alt=\"Next Page\" />\n          </div>\n        }\n      </div>\n    </>\n  )\n}\n\nexport default Pagination;","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/PostList.js",["75","76"],"import React, { useState, useEffect } from 'react';\nimport PostBlock from './PostBlock';\n// import './PostList.css';\n\nconst PostList = (props) => {\n  return(\n    props.posts.map((post) => {\n      return <PostBlock \n        key={post.id}\n        id={post.id}\n        banner={post.banner}\n        title={post.title}\n        description={post.description}\n      />\n    })\n  )\n}\n\nexport default PostList;","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Loading.js",["77","78"],"import React, { useState, useEffect } from 'react';\nimport './Loading.css';\n\nconst Loading = (props) => {\n  return(\n    <div className=\"loading-container\">\n      <h4>Loading...</h4>\n    </div>\n  )\n}\n\nexport default Loading;","/Users/ryan/Desktop/Development/ryan-xin-seer-technical-test/seer-code-challenge/src/components/Navigation.js",["79","80"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\nconst Navigation = (props) => {\n  return(\n    <nav className=\"main-nav nav-container\">\n      <div>\n        <img className=\"nav-logo\" src=\"/seer_logo_color@2x.png\" alt=\"seer_logo\" />\n      </div>\n      <div className=\"nav-link-container\">\n        <div>\n          <ul className=\"nav-link link text-color-primary\">\n            <li>Why Seer</li>\n            <li>Pricing</li>\n            <li>Customer</li>\n            <li>\n              <Link className=\"link current-nav-link\" to={'/blog'}>Blog</Link>\n            </li>\n            <li>Support</li>\n          </ul>\n        </div>\n        <div className=\"vertical-divider\"></div>\n        <div className=\"nav-cta-container\">\n          <span className=\"link text-color-secondary\">Sign In</span>\n          <button className=\"button-primary\">Get Started for Free</button>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navigation;",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":16,"nodeType":"87","messageId":"88","endLine":2,"endColumn":20},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"90","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"92","line":57,"column":6,"nodeType":"93","endLine":57,"endColumn":19,"suggestions":"94"},{"ruleId":"85","severity":1,"message":"95","line":9,"column":9,"nodeType":"87","messageId":"88","endLine":9,"endColumn":16},{"ruleId":"91","severity":1,"message":"96","line":27,"column":6,"nodeType":"93","endLine":27,"endColumn":8,"suggestions":"97"},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"90","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"90","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"98","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":16},{"ruleId":"85","severity":1,"message":"89","line":2,"column":17,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"85","severity":1,"message":"90","line":2,"column":27,"nodeType":"87","messageId":"88","endLine":2,"endColumn":36},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"90","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"90","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"90","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allPosts'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayedPosts' needs the current value of 'allPosts'.","ArrayExpression",["101"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'POST_URL'. Either include it or remove the dependency array.",["102"],"'render' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [allPosts, currentPage]",{"range":"107","text":"108"},"Update the dependencies array to be: [POST_URL]",{"range":"109","text":"110"},[1990,2003],"[allPosts, currentPage]",[883,885],"[POST_URL]"]
{"version":3,"sources":["components/Menu.js","components/Navigation.js","components/Footer.js","components/Banner.js","components/PostBlock.js","components/PostList.js","components/Pagination.js","components/Loading.js","components/Blog.js","components/Post.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","props","className","onClick","closeMenu","src","alt","Navigation","useState","menuShow","setMenuShow","controlMenuHandler","value","Footer","Banner","style","background","backgroundColor","title","description","PostBlock","POST_PATH","id","saveScrollPosition","localStorage","setItem","window","pageYOffset","to","banner","PostList","posts","map","post","Pagination","pageButtons","i","currentPage","push","setPageHandler","pages","history","useHistory","changePageHandler","num","changePage","setPage","Loading","Blog","blogBanner","allPosts","setAllPosts","displayedPosts","setDisplayedPosts","setPages","setCurrentPage","isLoading","setIsLoading","useEffect","axios","get","then","res","resPosts","data","content_type","contents","Math","round","length","existedPage","match","params","pageNum","convertedExistedPage","parseInt","slice","catch","err","console","log","scrollPosition","getItem","setTimeout","scrollTo","top","left","behavior","removeItem","Post","POST_URL","postId","setTitle","date","setDate","body","setBody","content","created_at","dangerouslySetInnerHTML","__html","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df397766.chunk.js","sourcesContent":["import React from 'react';\nimport './Menu.css';\n\nconst Menu = (props) => {\n  const closeMenuHandler = () => {\n    props.closeMenu(false);\n  };\n  \n  return(\n    <div className=\"menu-container\">\n      {/* Close button */}\n      <div className=\"menu-close-icon\" onClick={closeMenuHandler}>\n        <img src=\"/close_icon.svg\" alt=\"Close\" />\n      </div>\n      \n      {/* Nav links */}\n      <div className=\"menu-container-content\">\n        <ul className=\"link text-color-white\">\n          <li>Why Seer</li>\n          <li>Pricing</li>\n          <li>Customer</li>\n          <li className=\"current-nav-link\">Blog</li>\n          <li>Support</li>\n        </ul>\n      </div>\n      \n      {/* Divider */}\n      <div className=\"menu-horizontal-divider\"></div>\n      \n      {/* CTA buttons */}\n      <div className=\"menu-cta-buttons\">\n        <div>\n          <span className=\"link text-color-secondary\">Sign In</span>\n        </div>\n        <button className=\"button-primary\">Get Started for Free</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Menu;","import React, { useState } from 'react';\nimport Menu from './Menu';\nimport './Navigation.css';\n\nconst Navigation = (props) => {\n  const [menuShow, setMenuShow] = useState(false);\n  \n  const controlMenuHandler = (value) => {\n    setMenuShow(value);\n  };\n  \n  return(\n    <nav className=\"main-nav nav-container\">\n      {/* Logo section */}\n      <div>\n        <img className=\"nav-logo\" src=\"/seer_logo_color@2x.png\" alt=\"Seer logo\" />\n      </div>\n      <div className=\"nav-link-container\">\n      \n        {/* Navigation links */}\n        <div className=\"nav-desktop\">\n          <ul className=\"nav-link link text-color-primary\">\n            <li>Why Seer</li>\n            <li>Pricing</li>\n            <li>Customer</li>\n            <li className=\"current-nav-link\">Blog</li>\n            <li>Support</li>\n          </ul>\n        </div>\n        \n        {/* Divider */}\n        <div className=\"vertical-divider nav-desktop\"></div>\n        \n        {/* CTA buttons */}\n        <div className=\"nav-cta-container\">\n          <span className=\"link text-color-secondary nav-responsive-mobile\">Sign In</span>\n          <button className=\"button-primary nav-responsive-mobile\">Get Started for Free</button>\n          \n          {/* Responsive Menu Button */}\n          <div\n            className=\"nav-responsive menu-icon\"\n            onClick={() => controlMenuHandler(true)}\n          >\n            <img src=\"/menu_icon.svg\" alt=\"Menu\" />\n          </div>\n        </div>\n      </div>\n      \n      {/* Show / Hide responsive menu */}\n      {\n        menuShow && \n        <Menu closeMenu={controlMenuHandler} />\n      }\n    </nav>\n  )\n}\n\nexport default Navigation;","import React from 'react';\nimport './Footer.css';\n\nconst Footer = (props) => {\n  return(\n    <footer className=\"footer\">\n      {/* Footer top part */}\n      <div className=\"footer-icon-container\">\n        <div>\n          <img\n            className=\"footer-logo\"\n            src=\"/seer_logo_white@2x.png\"\n            alt=\"seer_logo\"\n          />\n        </div>\n        \n        {/* Social icons */}\n        <div className=\"social-icon-container\">\n          <div className=\"social-icon\">\n            <img src=\"/linkedin_icon.svg\" alt=\"linkedin\" />\n          </div>\n          <div className=\"social-icon\">\n            <img src=\"/facebook_icon.svg\" alt=\"facebook\" />\n          </div>\n          <div className=\"social-icon\">\n            <img src=\"/instagram_icon.svg\" alt=\"instagram\" />\n          </div>\n        </div>\n      </div>\n      \n      {/* Footer horizontal line */}\n      <div className=\"horizontal-divider\"></div>\n      \n      {/* Footer bottom part */}\n      <div className=\"footer-link-container\">\n        <div>\n          <ul className=\"footer-link link-small text-color-white\">\n            <li>About Us</li>\n            <li>Privacy Policy</li>\n            <li>Terms of Service</li>\n          </ul>\n        </div>\n        <div>\n          <span className=\"p-small text-color-white\">\n            &copy; Seer Data & Analytics 2020\n          </span>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;","import React from 'react';\nimport './Banner.css';\n\nconst Banner = (props) => {\n  return(\n    <div\n      className=\"banner\"\n      style={{\n        background: 'url(\"/banner_circle_01.svg\") left top no-repeat, url(\"/banner_circle_02.svg\") right bottom no-repeat',\n        backgroundColor: '#6C3563'\n      }}\n    >\n      <div className=\"banner-content-wrapper\">\n        <div className=\"banner-content\">\n          <h1>{props.title}</h1>\n          <p>{props.description}</p>\n          <img src='/arrow_down.svg' alt=\"down arrow\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Banner;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './PostBlock.css';\n\nconst PostBlock = (props) => {\n  const POST_PATH = `/blog/post/${props.id}`;\n  \n  // Save current scroll position to localstorage\n  const saveScrollPosition = () => {\n    localStorage.setItem('scrollPosition', window.pageYOffset);\n  };\n  \n  return(\n    <div className=\"post-block-item\">\n      {/* Blog post thumbnail */}\n      <Link to={POST_PATH}>\n        <div className=\"thumbnail-container\">\n          <img\n            onClick={saveScrollPosition}\n            className=\"post-thumbnail\"\n            src={props.banner}\n            alt={props.title}\n          />\n        </div>\n      </Link>\n      \n      {/* Blog post title */}\n      <Link\n        className=\"no-underline-link\"\n        to={POST_PATH}>\n        <h2\n          onClick={saveScrollPosition}\n          className=\"text-color-darkgrey post-title-link\"\n        >\n          {props.title}\n        </h2>\n      </Link>\n      \n      {/* Blog post description */}\n      <p className=\"text-color-darkgrey\">{props.description}</p>\n      \n      {/* Blog post cta button */}\n      <Link\n        className=\"link text-color-secondary\"\n        onClick={saveScrollPosition}\n        to={POST_PATH}\n      >\n        Read More\n      </Link>\n    </div>\n  )\n}\n\nexport default PostBlock;","import React from 'react';\nimport PostBlock from './PostBlock';\n\nconst PostList = (props) => {\n  return(\n    props.posts.map((post) => {\n      return <PostBlock \n        key={post.id}\n        id={post.id}\n        banner={post.banner}\n        title={post.title}\n        description={post.description}\n      />\n    })\n  )\n}\n\nexport default PostList;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Pagination.css';\n\nconst Pagination = (props) => {\n  // Use props.pages to render page number buttons\n  const pageButtons = [];\n  for (let i = 1; i <= props.pages; i++) {\n    // Set selected class(current-page) to props.currentPage number button\n    if(i === props.currentPage) {\n      pageButtons.push(\n        <div\n          className=\"current-page\"\n          key={i} \n          onClick={() => setPageHandler(i)}\n        >\n          <span \n            className=\"page-number text-color-white\" \n          >{i}</span>\n        </div>\n      )\n    } else {\n      pageButtons.push(\n        <div\n          className=\"unselected-page\"\n          key={i}\n          onClick={() => setPageHandler(i)}\n        >\n          <span\n            className=\"page-number text-color-primary\"\n          >{i}</span>\n        </div>\n      )\n    }\n  }\n  \n  const history = useHistory();\n  \n  // Lifting State num to parent to setCurrentPage: '-1' stands for clicking PrevPage Button; '1' stands for clicking PrevPage Button\n  const changePageHandler = (num) => {\n    // Only trigger PrevPage Button when props.currentPage is bigger than 1\n    if(num === -1 && props.currentPage > 1) {\n      props.changePage(num);\n      history.push(`/blog/${props.currentPage + num}`);\n    }\n    \n    // Only trigger NextPage Button when props.currentPage is smaller than total pages(props.pages)\n    if(num === 1 && props.currentPage < props.pages) {\n      props.changePage(num);\n      history.push(`/blog/${props.currentPage + num}`);\n    }\n  };\n  \n  // Lifting State num to parent to setCurrentPage: num is the selected page number\n  const setPageHandler = (num) => {\n    props.setPage(num);\n    history.push(`/blog/${num}`)\n  };\n  \n  return(\n    <>\n      <div className=\"pagination-container\">\n        {/* Hide PrevPage Button when props.currentPage is the first page */}\n        {\n          props.currentPage === 1 ? \n          null : \n          <div\n            className=\"unselected-page\"\n            onClick={() => changePageHandler(-1)}\n          >\n            <img src=\"/prev_page_icon.svg\" alt=\"Prev Page\" />\n          </div>\n        }\n        \n        {/* Render all page numbers */}\n        <div className=\"page-number-container\">\n          {pageButtons}\n        </div>\n        \n        {/* Hide NextPage Button when props.currentPage is the last page */}\n        {\n          props.currentPage === props.pages ? \n          null : \n          <div\n            className=\"unselected-page\"\n            onClick={() => changePageHandler(1)}\n          >\n            <img src=\"/next_page_icon.svg\" alt=\"Next Page\" />\n          </div>\n        }\n      </div>\n    </>\n  )\n}\n\nexport default Pagination;","import React from 'react';\nimport './Loading.css';\n\nconst Loading = (props) => {\n  return(\n    <div className=\"loading-container\">\n      <h4>Loading...</h4>\n    </div>\n  )\n}\n\nexport default Loading;","import React, { useState, useEffect } from 'react';\nimport Banner from './Banner';\nimport PostList from './PostList';\nimport Pagination from './Pagination';\nimport Loading from './Loading';\nimport axios from 'axios';\nimport './Blog.css';\n\nconst Blog = (props) => {\n  const BLOG_URL = 'https://backend.seerplatform.com/content-types/blog';\n  const blogBanner = {\n    title: 'Seer Blog',\n    description: 'News, articles and insightful stories dedicated to prepare you for your future decisions.'\n  };\n  \n  const [allPosts, setAllPosts] = useState([]);\n  const [displayedPosts, setDisplayedPosts] = useState([]);\n  const [pages, setPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Get num(1 or -1; 1 stands for next page & -1 stands for prev page) from Pagination to setCurrentPage\n  const changePageHandler = (num) => {\n    setCurrentPage(currentPage + num);\n    // Save currentPage to localStorage for non-children component use\n    localStorage.setItem('currentPage', currentPage + num);\n    // Scroll to Blog List top position\n    window.scrollTo(0, 500);\n  };\n  \n  // Get num(page number) from Pagination to setCurrentPage\n  const setPageHandler = (num) => {\n    setCurrentPage(num);\n    // Save currentPage to localStorage for non-children component use\n    localStorage.setItem('currentPage', num);\n    // Scroll to Blog List top position\n    window.scrollTo(0, 500);\n  };\n  \n  // Get all posts from backend when DOM is ready (componentDidMount)\n  useEffect(() => {\n    axios.get(BLOG_URL)\n    .then(res => {\n      const resPosts = res.data.data.content_type.contents;\n      // Save all posts to allPosts\n      setAllPosts(resPosts);\n      \n      // Save pages number to pages\n      const pages = Math.round(resPosts.length / 10);\n      setPages(pages);\n      \n      // If existedPage has value setCurrentPage to parseInt(existedPage)\n      const existedPage = props.match.params.pageNum;\n      if(existedPage) {\n        // props.match.params.pageNum returns a string, it needs to be converted to num.\n        const convertedExistedPage = parseInt(existedPage);\n        setCurrentPage(convertedExistedPage);\n        setDisplayedPosts(resPosts.slice((convertedExistedPage - 1) * 10, (convertedExistedPage * 10)))\n        // Save currentPage to localStorage for non-children component use\n        localStorage.setItem('currentPage', convertedExistedPage);\n      } else {\n        // If existedPage doesn't exists, setCurrentPage to 1\n        setCurrentPage(1);\n        // Save currentPage to localStorage for non-children component use\n        localStorage.setItem('currentPage', 1);\n        // Save first 10 posts to displayedPosts and pass to PostList\n        setDisplayedPosts(resPosts.slice(0, 10));\n      }\n      setIsLoading(false);\n    })\n    .catch(err => console.log(err));\n  }, []);\n  \n  // For handling go back to previous scroll position\n  useEffect(() => {\n    // Get saved scrollPosition from localStorage\n    const scrollPosition = localStorage.getItem('scrollPosition');\n    if(scrollPosition) {\n      setTimeout(() => {\n        window.scrollTo({\n          top: parseInt(scrollPosition),\n          left: 0,\n          behavior: 'smooth'\n        });\n        localStorage.removeItem('scrollPosition');\n      }, 140);\n    }\n  });\n  \n  // When currentPage changed this method is trigged to set current displayedPosts and pass to PostList\n  useEffect(() => {\n    setDisplayedPosts(allPosts.slice((currentPage - 1) * 10, (currentPage * 10)))\n  }, [currentPage]);\n  \n  return(\n    <>\n      {/* Blog top banner */}\n      <Banner \n        title={blogBanner.title}\n        description={blogBanner.description}\n      />\n      \n      {\n        isLoading ? \n        <Loading /> :\n        <div className=\"blog-container\">\n        \n          {/* Blog posts list */}\n          <div className=\"blog-list-container\">\n            <PostList \n              posts={displayedPosts}\n            />\n          </div>\n          \n          {/* Pagination */}\n          <Pagination \n            pages={pages}\n            currentPage={currentPage}\n            changePage={changePageHandler}\n            setPage={setPageHandler}\n          />\n        </div>\n      }\n    </>\n  )\n}\n\nexport default Blog;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from './Loading';\nimport axios from 'axios';\nimport './Post.css';\n\nconst Post = (props) => {\n  const POST_URL = `https://backend.seerplatform.com/content-types/blog/${props.match.params.postId}`;\n  \n  const currentPage = localStorage.getItem('currentPage');\n  \n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [body, setBody] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Get selected post from backend when DOM is ready (componentDidMount)\n  useEffect(() => {\n    axios.get(POST_URL)\n    .then(res => {\n      const post = res.data.data.content;\n      setTitle(post.title);\n      setDate(post.created_at.slice(0, 10));\n      setBody(post.body);\n      setIsLoading(false);\n    })\n    .catch(err => console.log(err));\n  }, []);\n  \n  return(\n    <>\n      {\n        isLoading ? \n        <Loading /> :\n        <>\n          {/* Blog post header */}\n          <div\n            className=\"post-header\"\n            style={{\n              background: 'url(\"/banner_circle_03.svg\") right bottom no-repeat',\n              backgroundColor: '#6C3563'\n            }}\n          >\n            {/* Back to Blog button */}\n            <div className=\"bread-crumbs\">\n              <Link\n                className=\"link-small text-color-white\"\n                to={`/blog/${currentPage}`}\n              >\n                &lt; Back to Blog\n              </Link>\n            </div>\n            \n            <div className=\"post-header-content-wrapper\">\n              <div className=\"post-header-content\">\n                <h1 className=\"text-color-white\">{title}</h1>\n                <p>{date}</p>\n              </div>\n            </div>\n          </div>\n          \n          {/* Blog post body content */}\n          <div\n            className=\"post-body\"\n            dangerouslySetInnerHTML={{__html: body}}\n          />\n        </>\n      }\n    </>\n  )\n}\n\nexport default Post;","import {Route, HashRouter as Router} from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport Footer from './components/Footer';\nimport Blog from './components/Blog';\nimport Post from './components/Post';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navigation />\n        <Route exact path={[\"/\", \"/blog\", \"/blog/:pageNum\"]} component={Blog} />\n        <Route exact path=\"/blog/post/:postId\" component={Post} />\n        <Footer />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './reset.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}